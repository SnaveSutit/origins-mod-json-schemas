{
	"type": "object",
	"required": ["comparison", "compare_to"],
	"properties": {
		"comparison": {
			"$ref": "../types/comparison.json",
			"description": "Determines how the calculated brightness value should be compared to the specified value.",
			"markdownDescription": "Determines how the calculated brightness value should be compared to the specified value."
		},
		"compare_to": {
			"type": "number",
			"description": "The value at which the calculated brightness value will be compared to.",
			"markdownDescription": "The value at which the calculated brightness value will be compared to."
		},
		"type": {
			"description": "## Brightness\n\n---\n\n\n[Entity Condition Type](https://origins.readthedocs.io/en/latest/types/entity_condition_types/brightness)\n\nChecks the brightness level at the entity's eyes, which ranges from 0 to 1.\n\nType ID: `origins:brightness`\n\n\n\n---\n\n### üìù Note\n\nTo calculate brightness at the player's eyes, the game first gathers the light level of the block the eyes are inside of. This light level is the highest between the block and sky light levels of the block. Then it calculates brightness with the following formula: `brightness = ambientLight + (1 - ambientLight) * lightLevel / (60 - 3 * lightLevel)`, with `ambientLight` as the dimension's ambient light, which is 0 in the overworld and the End, and 0.1 in the Nether. Thus the formula simplifies to `brightness = lightLevel / (60 - 3 * lightLevel)` for the overworld and the End. The calculated values, however, are slightly off due to [the imprecision of floating point calculations](https://origins.readthedocs.io/en/latest/types/entity_condition_types/brightness).\n\n\n\n    Here's a table of light levels to brightness levels:\n\n    Light level | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15\n    ------------|---|---|---|---|---|---|---|---|---|---|----|----|----|----|----|----\n    Overworld brightness | 0.0 | 0.017543862 | 0.03703704 | 0.05882353 | 0.08333334 | 0.11111111 | 0.14285715 | 0.17948718 | 0.22222225 | 0.2727273 | 0.33333334 | 0.40740743 | 0.50000006 | 0.6190476 | 0.77777773 | 1.0\n    Nether brightness | 0.1 | 0.11578947 | 0.13333334 | 0.15294118 | 0.17500001 | 0.2 | 0.22857144 | 0.26153848 | 0.3 | 0.34545457 | 0.4 | 0.4666667 | 0.5500001 | 0.6571428 | 0.79999995 | 1.0\n\n---\n\n### Examples\n\n```json\n\"condition\": {\n    \"type\": \"origins:brightness\",\n    \"comparison\": \"<=\",\n    \"compare_to\": 0.5\n}\n```\n\nThis example will check if the brightness level at the player's eyes is 0.5 or lower, which corresponds to a light level of 11 or below in any of the three default dimensions.\n",
			"markdownDescription": "## Brightness\n\n---\n\n\n[Entity Condition Type](https://origins.readthedocs.io/en/latest/types/entity_condition_types/brightness)\n\nChecks the brightness level at the entity's eyes, which ranges from 0 to 1.\n\nType ID: `origins:brightness`\n\n\n\n---\n\n### üìù Note\n\nTo calculate brightness at the player's eyes, the game first gathers the light level of the block the eyes are inside of. This light level is the highest between the block and sky light levels of the block. Then it calculates brightness with the following formula: `brightness = ambientLight + (1 - ambientLight) * lightLevel / (60 - 3 * lightLevel)`, with `ambientLight` as the dimension's ambient light, which is 0 in the overworld and the End, and 0.1 in the Nether. Thus the formula simplifies to `brightness = lightLevel / (60 - 3 * lightLevel)` for the overworld and the End. The calculated values, however, are slightly off due to [the imprecision of floating point calculations](https://origins.readthedocs.io/en/latest/types/entity_condition_types/brightness).\n\n\n\n    Here's a table of light levels to brightness levels:\n\n    Light level | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15\n    ------------|---|---|---|---|---|---|---|---|---|---|----|----|----|----|----|----\n    Overworld brightness | 0.0 | 0.017543862 | 0.03703704 | 0.05882353 | 0.08333334 | 0.11111111 | 0.14285715 | 0.17948718 | 0.22222225 | 0.2727273 | 0.33333334 | 0.40740743 | 0.50000006 | 0.6190476 | 0.77777773 | 1.0\n    Nether brightness | 0.1 | 0.11578947 | 0.13333334 | 0.15294118 | 0.17500001 | 0.2 | 0.22857144 | 0.26153848 | 0.3 | 0.34545457 | 0.4 | 0.4666667 | 0.5500001 | 0.6571428 | 0.79999995 | 1.0\n\n---\n\n### Examples\n\n```json\n\"condition\": {\n    \"type\": \"origins:brightness\",\n    \"comparison\": \"<=\",\n    \"compare_to\": 0.5\n}\n```\n\nThis example will check if the brightness level at the player's eyes is 0.5 or lower, which corresponds to a light level of 11 or below in any of the three default dimensions.\n"
		}
	},
	"x-intellij-html-description": "<hr>\n<h2>title: Brightness (Entity Condition Type)\ndate: 2021-07-04</h2>\n<h1>Brightness</h1>\n<p><a href=\"../entity_condition_types.md\">Entity Condition Type</a></p>\n<p>Checks the brightness level at the entity&#39;s eyes, which ranges from 0 to 1.</p>\n<p>Type ID: <code>origins:brightness</code></p>\n<p>!!! note</p>\n<pre><code>To calculate brightness at the player&#39;s eyes, the game first gathers the light level of the block the eyes are inside of. This light level is the highest between the block and sky light levels of the block. Then it calculates brightness with the following formula: `brightness = ambientLight + (1 - ambientLight) * lightLevel / (60 - 3 * lightLevel)`, with `ambientLight` as the dimension&#39;s ambient light, which is 0 in the overworld and the End, and 0.1 in the Nether. Thus the formula simplifies to `brightness = lightLevel / (60 - 3 * lightLevel)` for the overworld and the End. The calculated values, however, are slightly off due to [the imprecision of floating point calculations](https://0.30000000000000004.com/).\n\nHere&#39;s a table of light levels to brightness levels:\n\nLight level | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15\n------------|---|---|---|---|---|---|---|---|---|---|----|----|----|----|----|----\nOverworld brightness | 0.0 | 0.017543862 | 0.03703704 | 0.05882353 | 0.08333334 | 0.11111111 | 0.14285715 | 0.17948718 | 0.22222225 | 0.2727273 | 0.33333334 | 0.40740743 | 0.50000006 | 0.6190476 | 0.77777773 | 1.0\nNether brightness | 0.1 | 0.11578947 | 0.13333334 | 0.15294118 | 0.17500001 | 0.2 | 0.22857144 | 0.26153848 | 0.3 | 0.34545457 | 0.4 | 0.4666667 | 0.5500001 | 0.6571428 | 0.79999995 | 1.0\n</code></pre>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>comparison</code></td>\n<td><a href=\"../data_types/comparison.md\">Comparison</a></td>\n<td></td>\n<td>Determines how the calculated brightness value should be compared to the specified value.</td>\n</tr>\n<tr>\n<td><code>compare_to</code></td>\n<td><a href=\"../data_types/float.md\">Float</a></td>\n<td></td>\n<td>The value at which the calculated brightness value will be compared to.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">&quot;condition&quot;: {\n    &quot;type&quot;: &quot;origins:brightness&quot;,\n    &quot;comparison&quot;: &quot;&lt;=&quot;,\n    &quot;compare_to&quot;: 0.5\n}\n</code></pre>\n<p>This example will check if the brightness level at the player&#39;s eyes is 0.5 or lower, which corresponds to a light level of 11 or below in any of the three default dimensions.</p>\n"
}
