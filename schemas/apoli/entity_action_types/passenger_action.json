{
	"type": "object",
	"properties": {
		"action": {
			"$ref": "../entity_action.json",
			"description": "If specified, this action will be executed on the passenger entity.",
			"markdownDescription": "If specified, this action will be executed on the passenger entity."
		},
		"bientity_action": {
			"$ref": "../bientity_action.json",
			"description": "If specified, this action will be executed on either the 'actor' (the entity being ridden) or the 'target' (the passenger entity) or both.",
			"markdownDescription": "If specified, this action will be executed on either the 'actor' (the entity being ridden) or the 'target' (the passenger entity) or both."
		},
		"bientity_condition": {
			"$ref": "../bientity_condition.json",
			"description": "If specified, the specified actions will only be executed if this condition is fulfilled by either the 'actor' (the entity being ridden) or the 'target' (the passenger entity) or both.",
			"markdownDescription": "If specified, the specified actions will only be executed if this condition is fulfilled by either the 'actor' (the entity being ridden) or the 'target' (the passenger entity) or both."
		},
		"recursive": {
			"type": "boolean",
			"default": false,
			"description": "If set to `true`, the specified action(s) will be executed on all the passenger entities.",
			"markdownDescription": "If set to `true`, the specified action(s) will be executed on all the passenger entities."
		},
		"type": {
			"description": "## Passenger Action\n\n---\n\n\n[Entity Action Type](https://origins.readthedocs.io/en/latest/types/entity_action_types/passenger_action)\n\nExecutes an action on the passengers of the entity.\n\nType ID: `origins:passenger_action`\n\n\n\n---\n\n### üìù Note\n\nNot to be confused with [Riding Action](https://origins.readthedocs.io/en/latest/types/entity_action_types/passenger_action)\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:passenger_action\",\n    \"action\": {\n        \"type\": \"origins:heal\",\n        \"amount\": 2\n    },\n    \"recursive\": true\n}\n```\n\nThis example will heal all entities that are currently riding the entity that executed this entity action type.\n",
			"markdownDescription": "## Passenger Action\n\n---\n\n\n[Entity Action Type](https://origins.readthedocs.io/en/latest/types/entity_action_types/passenger_action)\n\nExecutes an action on the passengers of the entity.\n\nType ID: `origins:passenger_action`\n\n\n\n---\n\n### üìù Note\n\nNot to be confused with [Riding Action](https://origins.readthedocs.io/en/latest/types/entity_action_types/passenger_action)\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:passenger_action\",\n    \"action\": {\n        \"type\": \"origins:heal\",\n        \"amount\": 2\n    },\n    \"recursive\": true\n}\n```\n\nThis example will heal all entities that are currently riding the entity that executed this entity action type.\n"
		}
	},
	"x-intellij-html-description": "<hr>\n<h2>title: Passenger Action (Entity Action Type)\ndate: 2021-10-06</h2>\n<h1>Passenger Action</h1>\n<p><a href=\"../entity_action_types.md\">Entity Action Type</a></p>\n<p>Executes an action on the passengers of the entity.</p>\n<p>Type ID: <code>origins:passenger_action</code></p>\n<p>!!! note</p>\n<pre><code>Not to be confused with [Riding Action](./riding_action.md)\n</code></pre>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>action</code></td>\n<td><a href=\"../entity_action_types.md\">Entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, this action will be executed on the passenger entity.</td>\n</tr>\n<tr>\n<td><code>bientity_action</code></td>\n<td><a href=\"../bientity_action_types.md\">Bi-entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, this action will be executed on either the &#39;actor&#39; (the entity being ridden) or the &#39;target&#39; (the passenger entity) or both.</td>\n</tr>\n<tr>\n<td><code>bientity_condition</code></td>\n<td><a href=\"../bientity_condition_types.md\">Bi-entity Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the specified actions will only be executed if this condition is fulfilled by either the &#39;actor&#39; (the entity being ridden) or the &#39;target&#39; (the passenger entity) or both.</td>\n</tr>\n<tr>\n<td><code>recursive</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>If set to <code>true</code>, the specified action(s) will be executed on all the passenger entities.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">&quot;entity_action&quot;: {\n    &quot;type&quot;: &quot;origins:passenger_action&quot;,\n    &quot;action&quot;: {\n        &quot;type&quot;: &quot;origins:heal&quot;,\n        &quot;amount&quot;: 2\n    },\n    &quot;recursive&quot;: true\n}\n</code></pre>\n<p>This example will heal all entities that are currently riding the entity that executed this entity action type.</p>\n"
}
