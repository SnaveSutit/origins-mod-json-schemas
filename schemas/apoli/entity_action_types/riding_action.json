{"type":"object","properties":{"action":{"$ref":"../entity_action.json","description":"If specified, this action will be executed on the entity being ridden.","markdownDescription":"If specified, this action will be executed on the entity being ridden."},"bientity_action":{"$ref":"../bientity_action.json","description":"If specified, this action will be executed on either the 'actor' (the passenger entity) or the 'target' (the entity being ridden) or both.","markdownDescription":"If specified, this action will be executed on either the 'actor' (the passenger entity) or the 'target' (the entity being ridden) or both."},"bientity_condition":{"$ref":"../bientity_condition.json","description":"If specified, only execute the specified actions if this condition is fulfilled by either the 'actor' (the passenger entity) or the 'target' (entity being ridden) or both.","markdownDescription":"If specified, only execute the specified actions if this condition is fulfilled by either the 'actor' (the passenger entity) or the 'target' (entity being ridden) or both."},"recursive":{"type":"boolean","default":false,"description":"If set to `true`, the specified action(s) will be executed on all entities that are being ridden.","markdownDescription":"If set to `true`, the specified action(s) will be executed on all entities that are being ridden."},"type":{"description":"## Riding Action\n\n---\n\n\n[Entity Action Type](https://origins.readthedocs.io/en/latest/types/entity_action_types/riding_action)\n\nExecutes an action on the entity/entities that's being ridden by the entity.\n\nType ID: `origins:riding_action`\n\n\n\n---\n\n### üìù Note\n\nNot to be confused with [Passenger Action](https://origins.readthedocs.io/en/latest/types/entity_action_types/riding_action).\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:riding_action\",\n    \"action\": {\n        \"type\": \"origins:apply_effect\",\n        \"effect\": {\n            \"effect\": \"minecraft:speed\",\n            \"duration\": 100,\n            \"amplifier\": 1\n        }\n    }\n}\n```\n\nThis example will apply a Speed II status effect to the entity that is currently being ridden by the entity that executed the entity action type.\n","markdownDescription":"## Riding Action\n\n---\n\n\n[Entity Action Type](https://origins.readthedocs.io/en/latest/types/entity_action_types/riding_action)\n\nExecutes an action on the entity/entities that's being ridden by the entity.\n\nType ID: `origins:riding_action`\n\n\n\n---\n\n### üìù Note\n\nNot to be confused with [Passenger Action](https://origins.readthedocs.io/en/latest/types/entity_action_types/riding_action).\n\n\n\n---\n\n### Examples\n\n```json\n\"entity_action\": {\n    \"type\": \"origins:riding_action\",\n    \"action\": {\n        \"type\": \"origins:apply_effect\",\n        \"effect\": {\n            \"effect\": \"minecraft:speed\",\n            \"duration\": 100,\n            \"amplifier\": 1\n        }\n    }\n}\n```\n\nThis example will apply a Speed II status effect to the entity that is currently being ridden by the entity that executed the entity action type.\n"}},"x-intellij-html-description":"<hr>\n<h2>title: Riding Action (Entity Action Type)\ndate: 2021-10-06</h2>\n<h1>Riding Action</h1>\n<p><a href=\"../entity_action_types.md\">Entity Action Type</a></p>\n<p>Executes an action on the entity/entities that&#39;s being ridden by the entity.</p>\n<p>Type ID: <code>origins:riding_action</code></p>\n<p>!!! note</p>\n<pre><code>Not to be confused with [Passenger Action](./passenger_action.md).\n</code></pre>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>action</code></td>\n<td><a href=\"../entity_action_types.md\">Entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, this action will be executed on the entity being ridden.</td>\n</tr>\n<tr>\n<td><code>bientity_action</code></td>\n<td><a href=\"../bientity_action_types.md\">Bi-entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, this action will be executed on either the &#39;actor&#39; (the passenger entity) or the &#39;target&#39; (the entity being ridden) or both.</td>\n</tr>\n<tr>\n<td><code>bientity_condition</code></td>\n<td><a href=\"../bientity_condition_types.md\">Bi-entity Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, only execute the specified actions if this condition is fulfilled by either the &#39;actor&#39; (the passenger entity) or the &#39;target&#39; (entity being ridden) or both.</td>\n</tr>\n<tr>\n<td><code>recursive</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>If set to <code>true</code>, the specified action(s) will be executed on all entities that are being ridden.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">&quot;entity_action&quot;: {\n    &quot;type&quot;: &quot;origins:riding_action&quot;,\n    &quot;action&quot;: {\n        &quot;type&quot;: &quot;origins:apply_effect&quot;,\n        &quot;effect&quot;: {\n            &quot;effect&quot;: &quot;minecraft:speed&quot;,\n            &quot;duration&quot;: 100,\n            &quot;amplifier&quot;: 1\n        }\n    }\n}\n</code></pre>\n<p>This example will apply a Speed II status effect to the entity that is currently being ridden by the entity that executed the entity action type.</p>\n"}