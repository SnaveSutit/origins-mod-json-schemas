{
	"type": "object",
	"required": ["property"],
	"properties": {
		"property": {
			"type": "string",
			"description": "The name of the property that will be modified. Examples are `facing` or `age`. See [Minecraft Wiki: Block States (List of block states)](https://origins.readthedocs.io/en/latest/types/block_action_types/modify_block_state) for possible values.",
			"markdownDescription": "The name of the property that will be modified. Examples are `facing` or `age`. See [Minecraft Wiki: Block States (List of block states)](https://origins.readthedocs.io/en/latest/types/block_action_types/modify_block_state) for possible values."
		},
		"operation": {
			"enum": ["set", "add"],
			"description": "Determines how the value specified in the `change` field is operated on the specified property. Accepts `\"add\"` or `\"set\"`.",
			"markdownDescription": "Determines how the value specified in the `change` field is operated on the specified property. Accepts `\"add\"` or `\"set\"`."
		},
		"change": {
			"type": "number",
			"description": "If specified, the value to add, remove or set to/from the specified property if the specified property is an integer.",
			"markdownDescription": "If specified, the value to add, remove or set to/from the specified property if the specified property is an integer."
		},
		"value": {
			"type": "boolean",
			"description": "If specified, the boolean to use as the new value for the specified property if the specified property is a boolean.",
			"markdownDescription": "If specified, the boolean to use as the new value for the specified property if the specified property is a boolean."
		},
		"enum": {
			"type": "string",
			"description": "If specified, the string to use as the new value for the specified property if the specified property is a string.",
			"markdownDescription": "If specified, the string to use as the new value for the specified property if the specified property is a string."
		},
		"cycle": {
			"type": "boolean",
			"default": false,
			"description": "If set to true, changes the property to the next state in the cycle, ignoring all other optional fields. All property types can use this operation.",
			"markdownDescription": "If set to true, changes the property to the next state in the cycle, ignoring all other optional fields. All property types can use this operation."
		},
		"type": {
			"description": "## Modify Block State\n\n---\n\n\n[Block Action Type](https://origins.readthedocs.io/en/latest/types/block_action_types/modify_block_state)\n\nModifies the block state property of the block. Depending on the property type, different values are expected: boolean properties use `value`, enumeration properties use `enum`, and integer properties use `operation` and `change`.\n\nType ID: `origins:modify_block_state`\n\n\n\n---\n\n### üìù Note\n\nIf none of the expected fields are specified, this action will do nothing.\n\n\n\n---\n\n### Examples\n\n```json\n\"block_action\": {\n\t\"type\": \"origins:modify_block_state\",\n\t\"property\": \"facing\",\n\t\"cycle\": true\n}\n```\n\nThis example will cycle through the values of the `facing` property if available.\n",
			"markdownDescription": "## Modify Block State\n\n---\n\n\n[Block Action Type](https://origins.readthedocs.io/en/latest/types/block_action_types/modify_block_state)\n\nModifies the block state property of the block. Depending on the property type, different values are expected: boolean properties use `value`, enumeration properties use `enum`, and integer properties use `operation` and `change`.\n\nType ID: `origins:modify_block_state`\n\n\n\n---\n\n### üìù Note\n\nIf none of the expected fields are specified, this action will do nothing.\n\n\n\n---\n\n### Examples\n\n```json\n\"block_action\": {\n\t\"type\": \"origins:modify_block_state\",\n\t\"property\": \"facing\",\n\t\"cycle\": true\n}\n```\n\nThis example will cycle through the values of the `facing` property if available.\n"
		}
	},
	"x-intellij-html-description": "<hr>\n<h2>title: Modify Block State (Block Action Type)\ndate: 2021-11-30</h2>\n<h1>Modify Block State</h1>\n<p><a href=\"../block_action_types.md\">Block Action Type</a></p>\n<p>Modifies the block state property of the block. Depending on the property type, different values are expected: boolean properties use <code>value</code>, enumeration properties use <code>enum</code>, and integer properties use <code>operation</code> and <code>change</code>.</p>\n<p>Type ID: <code>origins:modify_block_state</code></p>\n<p>!!! note</p>\n<pre><code>If none of the expected fields are specified, this action will do nothing.\n</code></pre>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>property</code></td>\n<td><a href=\"../data_types/string.md\">String</a></td>\n<td></td>\n<td>The name of the property that will be modified. Examples are <code>facing</code> or <code>age</code>. See <a href=\"https://minecraft.wiki/w/Block_states#List_of_block_states\">Minecraft Wiki: Block States (List of block states)</a> for possible values.</td>\n</tr>\n<tr>\n<td><code>operation</code></td>\n<td><a href=\"../data_types/string.md\">String</a></td>\n<td><code>&quot;add&quot;</code></td>\n<td>Determines how the value specified in the <code>change</code> field is operated on the specified property. Accepts <code>&quot;add&quot;</code> or <code>&quot;set&quot;</code>.</td>\n</tr>\n<tr>\n<td><code>change</code></td>\n<td><a href=\"../data_types/integer.md\">Integer</a></td>\n<td><em>optional</em></td>\n<td>If specified, the value to add, remove or set to/from the specified property if the specified property is an integer.</td>\n</tr>\n<tr>\n<td><code>value</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><em>optional</em></td>\n<td>If specified, the boolean to use as the new value for the specified property if the specified property is a boolean.</td>\n</tr>\n<tr>\n<td><code>enum</code></td>\n<td><a href=\"../data_types/string.md\">String</a></td>\n<td><em>optional</em></td>\n<td>If specified, the string to use as the new value for the specified property if the specified property is a string.</td>\n</tr>\n<tr>\n<td><code>cycle</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>If set to true, changes the property to the next state in the cycle, ignoring all other optional fields. All property types can use this operation.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">&quot;block_action&quot;: {\n\t&quot;type&quot;: &quot;origins:modify_block_state&quot;,\n\t&quot;property&quot;: &quot;facing&quot;,\n\t&quot;cycle&quot;: true\n}\n</code></pre>\n<p>This example will cycle through the values of the <code>facing</code> property if available.</p>\n"
}
