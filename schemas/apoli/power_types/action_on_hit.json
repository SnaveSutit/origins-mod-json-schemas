{
	"type": "object",
	"required": ["bientity_action"],
	"properties": {
		"bientity_action": {
			"$ref": "../bientity_action.json",
			"description": "The action to be executed on either or both the '*_actor_*' or '*_target_*' entities.",
			"markdownDescription": "The action to be executed on either or both the '*_actor_*' or '*_target_*' entities."
		},
		"bientity_condition": {
			"$ref": "../bientity_condition.json",
			"description": "If specified, the specified action will only be executed if this condition is fulfilled by either or both '*_actor_*' and '*_target_*' entities.",
			"markdownDescription": "If specified, the specified action will only be executed if this condition is fulfilled by either or both '*_actor_*' and '*_target_*' entities."
		},
		"damage_condition": {
			"$ref": "../damage_condition.json",
			"description": "If specified, the specified action will only be executed if this condition is fulfilled by the damage dealt by the '*_actor_*' entity.",
			"markdownDescription": "If specified, the specified action will only be executed if this condition is fulfilled by the damage dealt by the '*_actor_*' entity."
		},
		"cooldown": {
			"type": "integer",
			"default": 1,
			"description": "Interval of ticks this power needs to recharge before the power can be triggered again.",
			"markdownDescription": "Interval of ticks this power needs to recharge before the power can be triggered again."
		},
		"hud_render": {
			"$ref": "../types/hud_render.json",
			"description": "Determines how the cooldown of this power is visualized on the HUD.",
			"markdownDescription": "Determines how the cooldown of this power is visualized on the HUD."
		},
		"type": {
			"description": "## Action On Hit\n\n---\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/action_on_hit)\n\nExecutes an action when the entity that has the power has hit another entity.\n\nType ID: `origins:action_on_hit`\n\n\n\n---\n\n### üìù Note\n\nIn the context of this power type, the '__actor__' entity is the entity that has the power whilst the '__target__' entity is the entity that was hit.\n\n\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"origins:action_on_hit\",\n    \"bientity_action\": {\n        \"type\": \"origins:add_velocity\",\n        \"z\": 2\n    }\n}\n```\n\nThis example will add positive-Z axis velocity to the entity that's been hit by the entity that has the power, essentially granting the entity with this power extra knockback.\n",
			"markdownDescription": "## Action On Hit\n\n---\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/action_on_hit)\n\nExecutes an action when the entity that has the power has hit another entity.\n\nType ID: `origins:action_on_hit`\n\n\n\n---\n\n### üìù Note\n\nIn the context of this power type, the '__actor__' entity is the entity that has the power whilst the '__target__' entity is the entity that was hit.\n\n\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"origins:action_on_hit\",\n    \"bientity_action\": {\n        \"type\": \"origins:add_velocity\",\n        \"z\": 2\n    }\n}\n```\n\nThis example will add positive-Z axis velocity to the entity that's been hit by the entity that has the power, essentially granting the entity with this power extra knockback.\n"
		}
	},
	"x-intellij-html-description": "<hr>\n<h2>title: Action On Hit (Power Type)\ndate: 2021-10-06</h2>\n<h1>Action On Hit</h1>\n<p><a href=\"../power_types.md\">Power Type</a></p>\n<p>Executes an action when the entity that has the power has hit another entity.</p>\n<p>Type ID: <code>origins:action_on_hit</code></p>\n<p>!!! note</p>\n<pre><code>In the context of this power type, the &#39;**actor**&#39; entity is the entity that has the power whilst the &#39;**target**&#39; entity is the entity that was hit.\n</code></pre>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>bientity_action</code></td>\n<td><a href=\"../bientity_action_types.md\">Bi-entity Action Type</a></td>\n<td></td>\n<td>The action to be executed on either or both the &#39;<strong>actor</strong>&#39; or &#39;<strong>target</strong>&#39; entities.</td>\n</tr>\n<tr>\n<td><code>bientity_condition</code></td>\n<td><a href=\"../bientity_condition_types.md\">Bi-entity Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the specified action will only be executed if this condition is fulfilled by either or both &#39;<strong>actor</strong>&#39; and &#39;<strong>target</strong>&#39; entities.</td>\n</tr>\n<tr>\n<td><code>damage_condition</code></td>\n<td><a href=\"../damage_condition_types.md\">Damage Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the specified action will only be executed if this condition is fulfilled by the damage dealt by the &#39;<strong>actor</strong>&#39; entity.</td>\n</tr>\n<tr>\n<td><code>cooldown</code></td>\n<td><a href=\"../data_types/integer.md\">Integer</a></td>\n<td><code>1</code></td>\n<td>Interval of ticks this power needs to recharge before the power can be triggered again.</td>\n</tr>\n<tr>\n<td><code>hud_render</code></td>\n<td><a href=\"../data_types/hud_render.md\">Hud Render</a></td>\n<td><code>{&quot;should_render&quot;: false}</code></td>\n<td>Determines how the cooldown of this power is visualized on the HUD.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">{\n    &quot;type&quot;: &quot;origins:action_on_hit&quot;,\n    &quot;bientity_action&quot;: {\n        &quot;type&quot;: &quot;origins:add_velocity&quot;,\n        &quot;z&quot;: 2\n    }\n}\n</code></pre>\n<p>This example will add positive-Z axis velocity to the entity that&#39;s been hit by the entity that has the power, essentially granting the entity with this power extra knockback.</p>\n"
}
