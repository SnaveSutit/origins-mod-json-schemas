{
	"type": "object",
	"required": ["food_component", "consume_sound"],
	"properties": {
		"entity_action": {
			"$ref": "../entity_action.json",
			"description": "If specified, this action will be executed on the player upon consuming an item.",
			"markdownDescription": "If specified, this action will be executed on the player upon consuming an item."
		},
		"item_action": {
			"$ref": "../item_action.json",
			"description": "If specified, this action will be executed on the item consumed by the player.",
			"markdownDescription": "If specified, this action will be executed on the item consumed by the player."
		},
		"result_item_action": {
			"$ref": "../item_action.json",
			"description": "If specified, this action will be executed on the item that is given to the player as a result of consuming an item.",
			"markdownDescription": "If specified, this action will be executed on the item that is given to the player as a result of consuming an item."
		},
		"item_condition": {
			"$ref": "../item_condition.json",
			"description": "If specified, will only make the item edible and the specified actions will only be executed if this condition is fulfilled by the item.",
			"markdownDescription": "If specified, will only make the item edible and the specified actions will only be executed if this condition is fulfilled by the item."
		},
		"food_component": {
			"$ref": "../types/food_component.json",
			"description": "The food component that the item grants upon eating it.",
			"markdownDescription": "The food component that the item grants upon eating it."
		},
		"return_stack": {
			"$ref": "../types/item_stack.json"
		},
		"consume_action": {
			"enum": ["eat", "drink"]
		},
		"consume_sound": {
			"$ref": "../types/autofill_helpers/sound_identifier.json"
		},
		"consuming_time_modifier": {
			"$ref": "../types/attribute_modifier_arrayable.json",
			"description": "If specified, this modifier will be applied on the maximum time the item is being consumed (in ticks).",
			"markdownDescription": "If specified, this modifier will be applied on the maximum time the item is being consumed (in ticks)."
		},
		"consuming_time_modifiers": {
			"type": "array",
			"items": {
				"$ref": "../types/attribute_modifier_arrayable.json"
			},
			"description": "If specified, these modifiers will be applied on the the maximum time the item is being consumed (in ticks).",
			"markdownDescription": "If specified, these modifiers will be applied on the the maximum time the item is being consumed (in ticks)."
		},
		"priority": {
			"type": "integer",
			"default": 0,
			"description": "Determines the priority of which the power will apply its modification to the item. Must be higher than 0 if the item is already edible.",
			"markdownDescription": "Determines the priority of which the power will apply its modification to the item. Must be higher than 0 if the item is already edible."
		},
		"type": {
			"description": "## Edible Item\n\n---\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/edible_item)\n\nMakes an item edible.\n\nType ID: `origins:edible_item`\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"origins:edible_item\",\n    \"item_condition\": {\n        \"type\": \"origins:ingredient\",\n        \"ingredient\": {\n            \"item\": \"minecraft:axolotl_bucket\"\n        }\n    },\n    \"food_component\": {\n        \"hunger\": 4,\n        \"saturation\": 1,\n        \"meat\": true\n    },\n    \"use_action\": \"eat\",\n    \"result_stack\": {\n        \"item\": \"minecraft:water_bucket\",\n        \"amount\": 1\n    }\n}\n```\n\nThis example will grant the players the ability to eat axolotls in buckets. It will give 4 hunger shanks and 8 saturation (4 * 1 * 2), it also counts as meat. This returns a water bucket upon consumption and uses the eat action.\n<br>\n\n\n```json\n{\n    \"type\": \"origins:edible_item\",\n    \"item_condition\": {\n        \"type\": \"origins:ingredient\",\n        \"ingredient\": {\n            \"item\": \"minecraft:cookie\"\n        }\n    },\n    \"food_component\": {\n        \"hunger\": 4.0,\n        \"saturation\": 0.4,\n        \"snack\": true\n    },\n    \"use_action\": \"eat\",\n    \"consuming_time_modifier\": {\n        \"operation\": \"multiply_total_multiplicative\",\n        \"value\": 2\n    },\n    \"priority\": 1\n}\n```\n\nThis example will replace the food component of Cookies, making it take 3 times longer to eat while also giving 4 hunger shanks and 3.2 saturation (4.0 * 0.4 * 2).\n",
			"markdownDescription": "## Edible Item\n\n---\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/edible_item)\n\nMakes an item edible.\n\nType ID: `origins:edible_item`\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"origins:edible_item\",\n    \"item_condition\": {\n        \"type\": \"origins:ingredient\",\n        \"ingredient\": {\n            \"item\": \"minecraft:axolotl_bucket\"\n        }\n    },\n    \"food_component\": {\n        \"hunger\": 4,\n        \"saturation\": 1,\n        \"meat\": true\n    },\n    \"use_action\": \"eat\",\n    \"result_stack\": {\n        \"item\": \"minecraft:water_bucket\",\n        \"amount\": 1\n    }\n}\n```\n\nThis example will grant the players the ability to eat axolotls in buckets. It will give 4 hunger shanks and 8 saturation (4 * 1 * 2), it also counts as meat. This returns a water bucket upon consumption and uses the eat action.\n<br>\n\n\n```json\n{\n    \"type\": \"origins:edible_item\",\n    \"item_condition\": {\n        \"type\": \"origins:ingredient\",\n        \"ingredient\": {\n            \"item\": \"minecraft:cookie\"\n        }\n    },\n    \"food_component\": {\n        \"hunger\": 4.0,\n        \"saturation\": 0.4,\n        \"snack\": true\n    },\n    \"use_action\": \"eat\",\n    \"consuming_time_modifier\": {\n        \"operation\": \"multiply_total_multiplicative\",\n        \"value\": 2\n    },\n    \"priority\": 1\n}\n```\n\nThis example will replace the food component of Cookies, making it take 3 times longer to eat while also giving 4 hunger shanks and 3.2 saturation (4.0 * 0.4 * 2).\n"
		}
	},
	"x-intellij-html-description": "<hr>\n<h2>title: Edible Item (Power Type)\ndate: 2023-10-09</h2>\n<h1>Edible Item</h1>\n<p><a href=\"../power_types.md\">Power Type</a></p>\n<p>Makes an item edible.</p>\n<p>Type ID: <code>origins:edible_item</code></p>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>entity_action</code></td>\n<td><a href=\"../entity_action_types.md\">Entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, this action will be executed on the player upon consuming an item.</td>\n</tr>\n<tr>\n<td><code>item_action</code></td>\n<td><a href=\"../item_action_types.md\">Item Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, this action will be executed on the item consumed by the player.</td>\n</tr>\n<tr>\n<td><code>result_item_action</code></td>\n<td><a href=\"../item_action_types.md\">Item Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, this action will be executed on the item that is given to the player as a result of consuming an item.</td>\n</tr>\n<tr>\n<td><code>item_condition</code></td>\n<td><a href=\"../item_condition_types.md\">Item Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, will only make the item edible and the specified actions will only be executed if this condition is fulfilled by the item.</td>\n</tr>\n<tr>\n<td><code>food_component</code></td>\n<td><a href=\"../data_types/food_component.md\">Food Component</a></td>\n<td></td>\n<td>The food component that the item grants upon eating it.</td>\n</tr>\n<tr>\n<td><a href=\"##\" title=\"Aliases: return_stack\"><code>result_stack</code></a></td>\n<td><a href=\"../data_types/item_stack.md\">Item Stack</a></td>\n<td><em>optional</em></td>\n<td>If specified, this item stack will be given to the player.</td>\n</tr>\n<tr>\n<td><a href=\"##\" title=\"Aliases: use_action\"><code>consume_animation</code></a></td>\n<td><a href=\"../data_types/string.md\">String</a></td>\n<td><code>&quot;eat&quot;</code></td>\n<td>Determines whether the animation effect for consuming the item should be &quot;eating&quot; (<code>&quot;eat&quot;</code>, displays particle effects based on the item) or &quot;drinking&quot; (<code>&quot;drink&quot;</code>, no particle effects.)</td>\n</tr>\n<tr>\n<td><a href=\"##\" title=\"Aliases: sound\"><code>consume_sound</code></a></td>\n<td><a href=\"../data_types/identifier.md\">Identifier</a></td>\n<td><code>&quot;minecraft:entity.generic.eat&quot;</code></td>\n<td>If specified, the sound event with this namespace and ID will be played when the item is eaten.</td>\n</tr>\n<tr>\n<td><code>consuming_time_modifier</code></td>\n<td><a href=\"../data_types/attribute_modifier.md\">Attribute Modifier</a></td>\n<td><em>optional</em></td>\n<td>If specified, this modifier will be applied on the maximum time the item is being consumed (in ticks).</td>\n</tr>\n<tr>\n<td><code>consuming_time_modifiers</code></td>\n<td><a href=\"../data_types/array.md\">Array</a> of <a href=\"../data_types/attribute_modifier.md\">Attribute Modifiers</a></td>\n<td><em>optional</em></td>\n<td>If specified, these modifiers will be applied on the the maximum time the item is being consumed (in ticks).</td>\n</tr>\n<tr>\n<td><code>priority</code></td>\n<td><a href=\"../data_types/integer.md\">Integer</a></td>\n<td><code>0</code></td>\n<td>Determines the priority of which the power will apply its modification to the item. Must be higher than 0 if the item is already edible.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">{\n    &quot;type&quot;: &quot;origins:edible_item&quot;,\n    &quot;item_condition&quot;: {\n        &quot;type&quot;: &quot;origins:ingredient&quot;,\n        &quot;ingredient&quot;: {\n            &quot;item&quot;: &quot;minecraft:axolotl_bucket&quot;\n        }\n    },\n    &quot;food_component&quot;: {\n        &quot;hunger&quot;: 4,\n        &quot;saturation&quot;: 1,\n        &quot;meat&quot;: true\n    },\n    &quot;use_action&quot;: &quot;eat&quot;,\n    &quot;result_stack&quot;: {\n        &quot;item&quot;: &quot;minecraft:water_bucket&quot;,\n        &quot;amount&quot;: 1\n    }\n}\n</code></pre>\n<p>This example will grant the players the ability to eat axolotls in buckets. It will give 4 hunger shanks and 8 saturation (4 * 1 * 2), it also counts as meat. This returns a water bucket upon consumption and uses the eat action.\n<br></p>\n<pre><code class=\"language-json\">{\n    &quot;type&quot;: &quot;origins:edible_item&quot;,\n    &quot;item_condition&quot;: {\n        &quot;type&quot;: &quot;origins:ingredient&quot;,\n        &quot;ingredient&quot;: {\n            &quot;item&quot;: &quot;minecraft:cookie&quot;\n        }\n    },\n    &quot;food_component&quot;: {\n        &quot;hunger&quot;: 4.0,\n        &quot;saturation&quot;: 0.4,\n        &quot;snack&quot;: true\n    },\n    &quot;use_action&quot;: &quot;eat&quot;,\n    &quot;consuming_time_modifier&quot;: {\n        &quot;operation&quot;: &quot;multiply_total_multiplicative&quot;,\n        &quot;value&quot;: 2\n    },\n    &quot;priority&quot;: 1\n}\n</code></pre>\n<p>This example will replace the food component of Cookies, making it take 3 times longer to eat while also giving 4 hunger shanks and 3.2 saturation (4.0 * 0.4 * 2).</p>\n"
}
