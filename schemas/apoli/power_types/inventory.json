{
	"type": "object",
	"properties": {
		"title": {
			"type": "string",
			"default": "\"container.inventory\"",
			"description": "The translation key or literal text to use as the display name for the inventory.",
			"markdownDescription": "The translation key or literal text to use as the display name for the inventory."
		},
		"container_type": {
			"$ref": "../types/container_type.json",
			"description": "Determines what type of container the inventory will be similar to.",
			"markdownDescription": "Determines what type of container the inventory will be similar to."
		},
		"drop_on_death": {
			"type": "boolean",
			"default": false,
			"description": "When this is set to true, the player will drop the items in the inventory on death (vanishing items will vanish!).",
			"markdownDescription": "When this is set to true, the player will drop the items in the inventory on death (vanishing items will vanish!)."
		},
		"drop_on_death_filter": {
			"$ref": "../item_condition.json",
			"description": "If this is set, only item stacks matching this condition will be dropped on death.",
			"markdownDescription": "If this is set, only item stacks matching this condition will be dropped on death."
		},
		"recoverable": {
			"type": "boolean",
			"default": true,
			"description": "Determines if the content of the inventory should be dropped upon losing the power.",
			"markdownDescription": "Determines if the content of the inventory should be dropped upon losing the power."
		},
		"key": {
			"$ref": "../types/key.json",
			"description": "Which active key this power should respond to.",
			"markdownDescription": "Which active key this power should respond to."
		},
		"type": {
			"description": "## Inventory\n\n---\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/inventory)\n\nProvides an inventory that can be opened with the specified [Key](https://origins.readthedocs.io/en/latest/types/power_types/inventory); may or may not persist on death.\n\nType ID: `origins:inventory`\n\n---\n\n### Examples\n\n```json\n{\n\t\"type\": \"origins:inventory\",\n\t\"container_type\": \"hopper\",\n\t\"drop_on_death\": false,\n\t\"key\": {\n\t\t\"key\": \"key.hotbar.9\"\n\t}\n}\n```\n\nThis example will allow the player to open an inventory similar to a Hopper; consisting only of 5 slots but does not drop on death.\n<br>\n\n```json\n{\n  \t\"type\": \"origins:inventory\",\n  \t\"drop_on_death\": true,\n\t\"drop_on_death_filter\": {\n\t\t\"type\": \"origins:food\",\n\t\t\"inverted\": true\n\t}\n}\n```\n\nThis example will allow the player to open a 9-slots inventory of which only non-food items will drop on death.\n",
			"markdownDescription": "## Inventory\n\n---\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/inventory)\n\nProvides an inventory that can be opened with the specified [Key](https://origins.readthedocs.io/en/latest/types/power_types/inventory); may or may not persist on death.\n\nType ID: `origins:inventory`\n\n---\n\n### Examples\n\n```json\n{\n\t\"type\": \"origins:inventory\",\n\t\"container_type\": \"hopper\",\n\t\"drop_on_death\": false,\n\t\"key\": {\n\t\t\"key\": \"key.hotbar.9\"\n\t}\n}\n```\n\nThis example will allow the player to open an inventory similar to a Hopper; consisting only of 5 slots but does not drop on death.\n<br>\n\n```json\n{\n  \t\"type\": \"origins:inventory\",\n  \t\"drop_on_death\": true,\n\t\"drop_on_death_filter\": {\n\t\t\"type\": \"origins:food\",\n\t\t\"inverted\": true\n\t}\n}\n```\n\nThis example will allow the player to open a 9-slots inventory of which only non-food items will drop on death.\n"
		}
	},
	"x-intellij-html-description": "<hr>\n<h2>title: Inventory (Power Type)\ndate: 2021-04-08</h2>\n<h1>Inventory</h1>\n<p><a href=\"../power_types.md\">Power Type</a></p>\n<p>Provides an inventory that can be opened with the specified <a href=\"../data_types/key.md\">Key</a>; may or may not persist on death.</p>\n<p>Type ID: <code>origins:inventory</code></p>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>title</code></td>\n<td><a href=\"../data_types/string.md\">String</a></td>\n<td><code>&quot;container.inventory&quot;</code></td>\n<td>The translation key or literal text to use as the display name for the inventory.</td>\n</tr>\n<tr>\n<td><code>container_type</code></td>\n<td><a href=\"../data_types/container_type.md\">Container Type</a></td>\n<td><code>&quot;dropper&quot;</code></td>\n<td>Determines what type of container the inventory will be similar to.</td>\n</tr>\n<tr>\n<td><code>drop_on_death</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>When this is set to true, the player will drop the items in the inventory on death (vanishing items will vanish!).</td>\n</tr>\n<tr>\n<td><code>drop_on_death_filter</code></td>\n<td><a href=\"../item_condition_types.md\">Item Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If this is set, only item stacks matching this condition will be dropped on death.</td>\n</tr>\n<tr>\n<td><code>recoverable</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>true</code></td>\n<td>Determines if the content of the inventory should be dropped upon losing the power.</td>\n</tr>\n<tr>\n<td><code>key</code></td>\n<td><a href=\"../data_types/key.md\">Key</a></td>\n<td><code>{&quot;key&quot;: &quot;key.origins.primary_active&quot;}</code></td>\n<td>Which active key this power should respond to.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">{\n\t&quot;type&quot;: &quot;origins:inventory&quot;,\n\t&quot;container_type&quot;: &quot;hopper&quot;,\n\t&quot;drop_on_death&quot;: false,\n\t&quot;key&quot;: {\n\t\t&quot;key&quot;: &quot;key.hotbar.9&quot;\n\t}\n}\n</code></pre>\n<p>This example will allow the player to open an inventory similar to a Hopper; consisting only of 5 slots but does not drop on death.\n<br></p>\n<pre><code class=\"language-json\">{\n  \t&quot;type&quot;: &quot;origins:inventory&quot;,\n  \t&quot;drop_on_death&quot;: true,\n\t&quot;drop_on_death_filter&quot;: {\n\t\t&quot;type&quot;: &quot;origins:food&quot;,\n\t\t&quot;inverted&quot;: true\n\t}\n}\n</code></pre>\n<p>This example will allow the player to open a 9-slots inventory of which only non-food items will drop on death.</p>\n"
}
