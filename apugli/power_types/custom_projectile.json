{"type":"object","required":["key"],"properties":{"type":{"description":"### ⚠️ Requires [Apugli](https://apugli.readthedocs.io/en/latest/) to be installed! ⚠️\n\n## Custom Projectile\n\n---\n\n\n[Power Type](https://apugli.readthedocs.io/en/latest/types/power_types/custom_projectile)\n\nFires a projectile that is customisable by the fields of the power type.\n\nType ID: `apugli:custom_projectile`\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"apugli:custom_projectile\",\n    \"texture_location\": \"minecraft:textures/item/brick.png\",\n    \"bientity_action_on_miss\": {\n        \"type\": \"apoli:target_action\",\n        \"action\": {\n          \"type\": \"apoli:and\",\n          \"actions\": [\n                {\n                    \"type\": \"apoli:execute_command\",\n                    \"command\": \"playsound minecraft:block.stone.break player @a ~ ~ ~ 1 0.7\"\n                },\n                {\n                    \"type\": \"apoli:spawn_particles\",\n                    \"particle\": {\n                        \"type\": \"minecraft:item\",\n                        \"params\": \"minecraft:brick\"\n                    },\n                    \"count\": 8,\n                    \"speed\": 0.1,\n                    \"spread\": {\n                        \"x\": 2.0,\n                        \"y\": 0.0,\n                        \"z\": 2.0\n                    }\n                }\n            ]\n        }\n    },\n    \"owner_target_bientity_action_on_hit\": {\n        \"type\": \"apoli:damage\",\n        \"source\": {\n          \"name\": \"brick.player\"\n        },\n        \"amount\": 8\n    },\n    \"key\": {\n        \"key\": \"key.use\"\n    },    \n    \"divergence\": 0.0,\n    \"speed\": 0.8\n}\n```\nThis example power will let the power holder throw a custom projectile textured like a brick with the use key. this spawns particles and plays a sound upon missing, and damages entities upon being hit by the brick. The brick flies at a speed of 0.8 and is perfectly accurate with a divergence of 0.","markdownDescription":"### ⚠️ Requires [Apugli](https://apugli.readthedocs.io/en/latest/) to be installed! ⚠️\n\n## Custom Projectile\n\n---\n\n\n[Power Type](https://apugli.readthedocs.io/en/latest/types/power_types/custom_projectile)\n\nFires a projectile that is customisable by the fields of the power type.\n\nType ID: `apugli:custom_projectile`\n\n---\n\n### Examples\n\n```json\n{\n    \"type\": \"apugli:custom_projectile\",\n    \"texture_location\": \"minecraft:textures/item/brick.png\",\n    \"bientity_action_on_miss\": {\n        \"type\": \"apoli:target_action\",\n        \"action\": {\n          \"type\": \"apoli:and\",\n          \"actions\": [\n                {\n                    \"type\": \"apoli:execute_command\",\n                    \"command\": \"playsound minecraft:block.stone.break player @a ~ ~ ~ 1 0.7\"\n                },\n                {\n                    \"type\": \"apoli:spawn_particles\",\n                    \"particle\": {\n                        \"type\": \"minecraft:item\",\n                        \"params\": \"minecraft:brick\"\n                    },\n                    \"count\": 8,\n                    \"speed\": 0.1,\n                    \"spread\": {\n                        \"x\": 2.0,\n                        \"y\": 0.0,\n                        \"z\": 2.0\n                    }\n                }\n            ]\n        }\n    },\n    \"owner_target_bientity_action_on_hit\": {\n        \"type\": \"apoli:damage\",\n        \"source\": {\n          \"name\": \"brick.player\"\n        },\n        \"amount\": 8\n    },\n    \"key\": {\n        \"key\": \"key.use\"\n    },    \n    \"divergence\": 0.0,\n    \"speed\": 0.8\n}\n```\nThis example power will let the power holder throw a custom projectile textured like a brick with the use key. this spawns particles and plays a sound upon missing, and damages entities upon being hit by the brick. The brick flies at a speed of 0.8 and is perfectly accurate with a divergence of 0."},"cooldown":{"type":"integer","default":1,"description":"Interval of ticks this power needs to recharge before the power can be triggered again.","markdownDescription":"Interval of ticks this power needs to recharge before the power can be triggered again."},"hud_render":{"$ref":"../../apoli/types/hud_render.json","description":"Determines how the cooldown of this power is visualized on the HUD.","markdownDescription":"Determines how the cooldown of this power is visualized on the HUD."},"texture_location":{"$ref":"../../apoli/types/autofill_helpers/texture_location.json","description":"If specified, the texture used for the custom projectile.","markdownDescription":"If specified, the texture used for the custom projectile."},"texture_url":{"type":"string","enum":["texture_location"],"description":"If specified, the url to a .png file imported into the game as a texture for this power's use. This will be used as a fallback if `texture_location` is not specified or if a texture is not present.","markdownDescription":"If specified, the url to a .png file imported into the game as a texture for this power's use. This will be used as a fallback if `texture_location` is not specified or if a texture is not present."},"count":{"type":"integer","default":1,"description":"The amount of projectiles to fire each use.","markdownDescription":"The amount of projectiles to fire each use."},"interval":{"type":"integer","default":0,"description":"Determines the interval for firing multiple projectiles consecutively (in ticks). If set to 0, it will fire all the projectiles at the same tick.","markdownDescription":"Determines the interval for firing multiple projectiles consecutively (in ticks). If set to 0, it will fire all the projectiles at the same tick."},"start_delay":{"type":"integer","default":0,"description":"Determines how long the start of the firing process is delayed (in ticks).","markdownDescription":"Determines how long the start of the firing process is delayed (in ticks)."},"speed":{"type":"number","default":1.5,"description":"The speed applied to the fired projectile.","markdownDescription":"The speed applied to the fired projectile."},"divergence":{"type":"number","default":1,"description":"How much each projectile fired is affected by random spread.","markdownDescription":"How much each projectile fired is affected by random spread."},"sound":{"$ref":"../../apoli/types/autofill_helpers/sound_identifier.json","description":"If set, the sound with this ID will be played when the power is used.","markdownDescription":"If set, the sound with this ID will be played when the power is used."},"tag":{"$ref":"../../apoli/types/nbt.json","description":"NBT data of the entity.","markdownDescription":"NBT data of the entity."},"entity_action_before_firing":{"$ref":"../../apoli/entity_action.json","description":"If specified, the entity action to execute on the entity firing the projectile just prior to the projectile being created.","markdownDescription":"If specified, the entity action to execute on the entity firing the projectile just prior to the projectile being created."},"bientity_action_after_firing":{"$ref":"../../apoli/bientity_action.json","description":"If specified, the bi-entity action to execute with the projectile owner the actor, and the projectile as the target as soon as the projectile is created.","markdownDescription":"If specified, the bi-entity action to execute with the projectile owner the actor, and the projectile as the target as soon as the projectile is created."},"block_action_on_hit":{"$ref":"../../apoli/block_action.json","description":"If specified, the block action to execute on the block the projectile lands on upon having it land on it.","markdownDescription":"If specified, the block action to execute on the block the projectile lands on upon having it land on it."},"bientity_action_on_miss":{"$ref":"../../apoli/bientity_action.json","description":"If specified, the bi-entity action to execute with the projectile owner as the actor, and the projectile as the target upon missing.","markdownDescription":"If specified, the bi-entity action to execute with the projectile owner as the actor, and the projectile as the target upon missing."},"bientity_action_on_hit":{"$ref":"../../apoli/bientity_action.json","description":"If specified, the bi-entity action to execute with the projectile as the actor, and the hit entity as the target upon hitting an entity.","markdownDescription":"If specified, the bi-entity action to execute with the projectile as the actor, and the hit entity as the target upon hitting an entity."},"owner_target_bientity_action_on_hit":{"$ref":"../../apoli/bientity_action.json","description":"If specified, the bi-entity action to execute with the projectile owner as the actor, and the hit entity as the target upon hitting an entity.","markdownDescription":"If specified, the bi-entity action to execute with the projectile owner as the actor, and the hit entity as the target upon hitting an entity."},"allow_conditional_cancelling":{"type":"boolean","default":false,"description":"Determines if extra projectiles will no longer be fired as soon as the entity no longer meets this power's condition.","markdownDescription":"Determines if extra projectiles will no longer be fired as soon as the entity no longer meets this power's condition."},"block_action_cancels_miss_action":{"default":"false","$ref":"../../apoli/block_action.json","description":"Determines if the `block_action_on_hit` action will cancel the `bientity_action_on_miss` action.","markdownDescription":"Determines if the `block_action_on_hit` action will cancel the `bientity_action_on_miss` action."},"block_condition":{"$ref":"../../apoli/block_condition.json","description":"If specified, the block condition that the block targeted by the `block_action_on_hit` field must meet in order for that to run.","markdownDescription":"If specified, the block condition that the block targeted by the `block_action_on_hit` field must meet in order for that to run."},"bientity_condition":{"$ref":"../../apoli/bientity_condition.json","description":"If specified, the bi-entity condition with the projectile as the actor and the target as the target for the projectile to actually hit the target instead of pass through.","markdownDescription":"If specified, the bi-entity condition with the projectile as the actor and the target as the target for the projectile to actually hit the target instead of pass through."},"owner_bientity_condition":{"$ref":"../../apoli/bientity_condition.json","description":"If specified, the bi-entity condition with the projectile owner as the actor and the target as the target for the projectile to actually hit the target instead of pass through.","markdownDescription":"If specified, the bi-entity condition with the projectile owner as the actor and the target as the target for the projectile to actually hit the target instead of pass through."},"tick_bientity_action":{"$ref":"../../apoli/bientity_action.json","description":"If specified, the bi-entity action with the projectile owner as the actor, and the projectile as the target that is run each tick of the projectile's lifespan.","markdownDescription":"If specified, the bi-entity action with the projectile owner as the actor, and the projectile as the target that is run each tick of the projectile's lifespan."},"key":{"$ref":"../../apoli/types/key.json","description":"Which active key this power should respond to.","markdownDescription":"Which active key this power should respond to."}},"x-intellij-html-description":"<hr>\n<h2>title: Custom Projectile (Power Type)\ndate: 2023-10-29</h2>\n<h1>Custom Projectile</h1>\n<p><a href=\"../power_types.md\">Power Type</a></p>\n<p>Fires a projectile that is customisable by the fields of the power type.</p>\n<p>Type ID: <code>apugli:custom_projectile</code></p>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>cooldown</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/integer/\">Integer</a></td>\n<td><code>1</code></td>\n<td>Interval of ticks this power needs to recharge before the power can be triggered again.</td>\n</tr>\n<tr>\n<td><code>hud_render</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/hud_render/\">Hud Render</a></td>\n<td><em>optional</em></td>\n<td>Determines how the cooldown of this power is visualized on the HUD.</td>\n</tr>\n<tr>\n<td><code>texture_location</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/identifier/\">Identifier</a></td>\n<td><em>optional</em></td>\n<td>If specified, the texture used for the custom projectile.</td>\n</tr>\n<tr>\n<td><code>texture_url</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/string/\">String</a></td>\n<td><em>optional</em></td>\n<td>If specified, the url to a .png file imported into the game as a texture for this power&#39;s use. This will be used as a fallback if <code>texture_location</code> is not specified or if a texture is not present.</td>\n</tr>\n<tr>\n<td><code>count</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/integer/\">Integer</a></td>\n<td><code>1</code></td>\n<td>The amount of projectiles to fire each use.</td>\n</tr>\n<tr>\n<td><code>interval</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/integer/\">Integer</a></td>\n<td><code>0</code></td>\n<td>Determines the interval for firing multiple projectiles consecutively (in ticks). If set to 0, it will fire all the projectiles at the same tick.</td>\n</tr>\n<tr>\n<td><code>start_delay</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/integer/\">Integer</a></td>\n<td><code>0</code></td>\n<td>Determines how long the start of the firing process is delayed (in ticks).</td>\n</tr>\n<tr>\n<td><code>speed</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/float/\">Float</a></td>\n<td><code>1.5</code></td>\n<td>The speed applied to the fired projectile.</td>\n</tr>\n<tr>\n<td><code>divergence</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/float/\">Float</a></td>\n<td><code>1.0</code></td>\n<td>How much each projectile fired is affected by random spread.</td>\n</tr>\n<tr>\n<td><code>sound</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/identifier/\">Identifier</a></td>\n<td><em>optional</em></td>\n<td>If set, the sound with this ID will be played when the power is used.</td>\n</tr>\n<tr>\n<td><code>tag</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/nbt/\">NBT</a></td>\n<td><em>optional</em></td>\n<td>NBT data of the entity.</td>\n</tr>\n<tr>\n<td><code>entity_action_before_firing</code></td>\n<td><a href=\"../entity_action_types.md\">Entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the entity action to execute on the entity firing the projectile just prior to the projectile being created.</td>\n</tr>\n<tr>\n<td><code>bientity_action_after_firing</code></td>\n<td><a href=\"../bientity_action_types.md\">Bi-entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the bi-entity action to execute with the projectile owner the actor, and the projectile as the target as soon as the projectile is created.</td>\n</tr>\n<tr>\n<td><code>block_action_on_hit</code></td>\n<td><a href=\"../block_action_types.md\">Block Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the block action to execute on the block the projectile lands on upon having it land on it.</td>\n</tr>\n<tr>\n<td><code>bientity_action_on_miss</code></td>\n<td><a href=\"../entity_action_types.md\">Entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the bi-entity action to execute with the projectile owner as the actor, and the projectile as the target upon missing.</td>\n</tr>\n<tr>\n<td><code>bientity_action_on_hit</code></td>\n<td><a href=\"../entity_action_types.md\">Entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the bi-entity action to execute with the projectile as the actor, and the hit entity as the target upon hitting an entity.</td>\n</tr>\n<tr>\n<td><code>owner_target_bientity_action_on_hit</code></td>\n<td><a href=\"../entity_action_types.md\">Entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the bi-entity action to execute with the projectile owner as the actor, and the hit entity as the target upon hitting an entity.</td>\n</tr>\n<tr>\n<td><code>allow_conditional_cancelling</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/boolean/\">Boolean</a></td>\n<td><code>false</code></td>\n<td>Determines if extra projectiles will no longer be fired as soon as the entity no longer meets this power&#39;s condition.</td>\n</tr>\n<tr>\n<td><code>block_action_cancels_miss_action</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/boolean/\">Boolean</a></td>\n<td><code>false</code></td>\n<td>Determines if the <code>block_action_on_hit</code> action will cancel the <code>bientity_action_on_miss</code> action.</td>\n</tr>\n<tr>\n<td><code>block_condition</code></td>\n<td><a href=\"../block_condition_types.md\">Block Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the block condition that the block targeted by the <code>block_action_on_hit</code> field must meet in order for that to run.</td>\n</tr>\n<tr>\n<td><code>bientity_condition</code></td>\n<td><a href=\"../block_condition_types.md\">Block Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the bi-entity condition with the projectile as the actor and the target as the target for the projectile to actually hit the target instead of pass through.</td>\n</tr>\n<tr>\n<td><code>owner_bientity_condition</code></td>\n<td><a href=\"../block_condition_types.md\">Block Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the bi-entity condition with the projectile owner as the actor and the target as the target for the projectile to actually hit the target instead of pass through.</td>\n</tr>\n<tr>\n<td><code>tick_bientity_action</code></td>\n<td><a href=\"../bientity_action_types.md\">Bi-entity Action Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the bi-entity action with the projectile owner as the actor, and the projectile as the target that is run each tick of the projectile&#39;s lifespan.</td>\n</tr>\n<tr>\n<td><code>key</code></td>\n<td><a href=\"https://origins.readthedocs.io/en/latest/types/data_types/key/\">Key</a></td>\n<td></td>\n<td>Which active key this power should respond to.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">{\n    &quot;type&quot;: &quot;apugli:custom_projectile&quot;,\n    &quot;texture_location&quot;: &quot;minecraft:textures/item/brick.png&quot;,\n    &quot;bientity_action_on_miss&quot;: {\n        &quot;type&quot;: &quot;apoli:target_action&quot;,\n        &quot;action&quot;: {\n          &quot;type&quot;: &quot;apoli:and&quot;,\n          &quot;actions&quot;: [\n                {\n                    &quot;type&quot;: &quot;apoli:execute_command&quot;,\n                    &quot;command&quot;: &quot;playsound minecraft:block.stone.break player @a ~ ~ ~ 1 0.7&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;apoli:spawn_particles&quot;,\n                    &quot;particle&quot;: {\n                        &quot;type&quot;: &quot;minecraft:item&quot;,\n                        &quot;params&quot;: &quot;minecraft:brick&quot;\n                    },\n                    &quot;count&quot;: 8,\n                    &quot;speed&quot;: 0.1,\n                    &quot;spread&quot;: {\n                        &quot;x&quot;: 2.0,\n                        &quot;y&quot;: 0.0,\n                        &quot;z&quot;: 2.0\n                    }\n                }\n            ]\n        }\n    },\n    &quot;owner_target_bientity_action_on_hit&quot;: {\n        &quot;type&quot;: &quot;apoli:damage&quot;,\n        &quot;source&quot;: {\n          &quot;name&quot;: &quot;brick.player&quot;\n        },\n        &quot;amount&quot;: 8\n    },\n    &quot;key&quot;: {\n        &quot;key&quot;: &quot;key.use&quot;\n    },    \n    &quot;divergence&quot;: 0.0,\n    &quot;speed&quot;: 0.8\n}\n</code></pre>\n<p>This example power will let the power holder throw a custom projectile textured like a brick with the use key. this spawns particles and plays a sound upon missing, and damages entities upon being hit by the brick. The brick flies at a speed of 0.8 and is perfectly accurate with a divergence of 0.</p>\n"}