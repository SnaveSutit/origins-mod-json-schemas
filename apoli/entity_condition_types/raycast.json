{"type":"object","properties":{"distance":{"type":"number","description":"Determines the maximum distance the ray-cast will travel.","markdownDescription":"Determines the maximum distance the ray-cast will travel."},"block":{"type":"boolean","default":true,"description":"Determines whether the ray-cast should include blocks.","markdownDescription":"Determines whether the ray-cast should include blocks."},"entity":{"type":"boolean","default":true,"description":"Determines whether the ray-cast should include entities.","markdownDescription":"Determines whether the ray-cast should include entities."},"shape_type":{"$ref":"../types/shape_type.json","description":"Determines how the ray-cast will handle blocks.","markdownDescription":"Determines how the ray-cast will handle blocks."},"fluid_handling":{"$ref":"../types/fluid_handling.json","description":"Determines how the ray-cast will handle fluids.","markdownDescription":"Determines how the ray-cast will handle fluids."},"space":{"$ref":"../types/space.json","description":"Determines how the direction will be calculated. <span style=\"color: goldenrod;\"><b>Only used if <code>direction</code> is specified.</b></span>","markdownDescription":"Determines how the direction will be calculated. <span style=\"color: goldenrod;\"><b>Only used if <code>direction</code> is specified.</b></span>"},"direction":{"type":"object","description":"If specified, determines the direction of the raycast. Otherwise, defaults to the direction at the entity is facing (as if `space` is `\"local\"`.)","markdownDescription":"If specified, determines the direction of the raycast. Otherwise, defaults to the direction at the entity is facing (as if `space` is `\"local\"`.)"},"match_bientity_condition":{"$ref":"../bientity_condition.json","description":"If specified, the entity condition type will check if this bi-entity condition type is fulfilled by either or both the 'actor' (the entity being checked by the entity condition type) and 'target' (entity that the ray-cast has gone through). If not, the entity will be ignored.","markdownDescription":"If specified, the entity condition type will check if this bi-entity condition type is fulfilled by either or both the 'actor' (the entity being checked by the entity condition type) and 'target' (entity that the ray-cast has gone through). If not, the entity will be ignored."},"hit_bientity_condition":{"$ref":"../bientity_condition.json","description":"If specified, the entity condition type will check if this bi-entity condition type is fulfilled by either or both the 'actor' (the entity being checked by the entity condition type) and 'target' (the entity that has hit by the ray-cast).","markdownDescription":"If specified, the entity condition type will check if this bi-entity condition type is fulfilled by either or both the 'actor' (the entity being checked by the entity condition type) and 'target' (the entity that has hit by the ray-cast)."},"entity_distance":{"type":"number","description":"Determines the distance of the raycast for entities if `entity` is set to `true`. If absent, it will use the higher value between the entity's attack range (with Reach Entity Attributes compatibility) or the `distance` field.","markdownDescription":"Determines the distance of the raycast for entities if `entity` is set to `true`. If absent, it will use the higher value between the entity's attack range (with Reach Entity Attributes compatibility) or the `distance` field."},"block_condition":{"$ref":"../block_condition.json","description":"If specified, the entity condition type will check if the block that was hit by the ray-cast fulfills this block condition type.","markdownDescription":"If specified, the entity condition type will check if the block that was hit by the ray-cast fulfills this block condition type."},"block_distance":{"type":"number","description":"Determines the distance of the raycast for blocks if `block` is set to `true`. If absent, it will use the higher value between the entity's block reach (with Reach Entity Attributes compatibility) or the `distance` field.","markdownDescription":"Determines the distance of the raycast for blocks if `block` is set to `true`. If absent, it will use the higher value between the entity's block reach (with Reach Entity Attributes compatibility) or the `distance` field."},"type":{"description":"## Raycast\n\n---\n\n\n[Entity Condition Type](https://origins.readthedocs.io/en/latest/types/entity_condition_types/raycast)\n\nCasts a ray to the direction where the entity is looking.\n\nType ID: `origins:raycast`\n\n---\n\n### Examples\n\n```json\n\"condition\": {\n    \"type\": \"origins:raycast\",\n    \"distance\": 6,\n    \"block\": true,\n    \"entity\": true,\n    \"shape_type\": \"visual\",\n    \"fluid_handling\": \"any\",\n    \"match_bientity_condition\": {\n        \"type\": \"origins:target_condition\",\n        \"condition\": {\n            \"type\": \"origins:entity_type\",\n            \"entity_type\": \"minecraft:wolf\"\n        }\n    },\n    \"hit_bientity_condition\": {\n        \"type\": \"origins:owner\"\n    }\n}\n```\n\nThis example will check if a wolf mob is tamed by the entity that has fired the ray-cast. The ray-cast will ignore tamable mobs other than wolves.\n","markdownDescription":"## Raycast\n\n---\n\n\n[Entity Condition Type](https://origins.readthedocs.io/en/latest/types/entity_condition_types/raycast)\n\nCasts a ray to the direction where the entity is looking.\n\nType ID: `origins:raycast`\n\n---\n\n### Examples\n\n```json\n\"condition\": {\n    \"type\": \"origins:raycast\",\n    \"distance\": 6,\n    \"block\": true,\n    \"entity\": true,\n    \"shape_type\": \"visual\",\n    \"fluid_handling\": \"any\",\n    \"match_bientity_condition\": {\n        \"type\": \"origins:target_condition\",\n        \"condition\": {\n            \"type\": \"origins:entity_type\",\n            \"entity_type\": \"minecraft:wolf\"\n        }\n    },\n    \"hit_bientity_condition\": {\n        \"type\": \"origins:owner\"\n    }\n}\n```\n\nThis example will check if a wolf mob is tamed by the entity that has fired the ray-cast. The ray-cast will ignore tamable mobs other than wolves.\n"}},"x-intellij-html-description":"<hr>\n<h2>title: Raycast (Entity Condition Type)\ndate: 2021-12-07</h2>\n<h1>Raycast</h1>\n<p><a href=\"../entity_condition_types.md\">Entity Condition Type</a></p>\n<p>Casts a ray to the direction where the entity is looking.</p>\n<p>Type ID: <code>origins:raycast</code></p>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>distance</code></td>\n<td><a href=\"../data_types/float.md\">Float</a></td>\n<td><em>optional</em></td>\n<td>Determines the maximum distance the ray-cast will travel.</td>\n</tr>\n<tr>\n<td><code>block</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>true</code></td>\n<td>Determines whether the ray-cast should include blocks.</td>\n</tr>\n<tr>\n<td><code>entity</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>true</code></td>\n<td>Determines whether the ray-cast should include entities.</td>\n</tr>\n<tr>\n<td><code>shape_type</code></td>\n<td><a href=\"../data_types/shape_type.md\">Shape Type</a></td>\n<td><code>&quot;visual&quot;</code></td>\n<td>Determines how the ray-cast will handle blocks.</td>\n</tr>\n<tr>\n<td><code>fluid_handling</code></td>\n<td><a href=\"../data_types/fluid_handling.md\">Fluid Handling</a></td>\n<td><code>&quot;any&quot;</code></td>\n<td>Determines how the ray-cast will handle fluids.</td>\n</tr>\n<tr>\n<td><code>space</code></td>\n<td><a href=\"../data_types/space.md\">Space</a></td>\n<td><code>&quot;world&quot;</code></td>\n<td>Determines how the direction will be calculated. <span style=\"color: goldenrod;\"><b>Only used if <code>direction</code> is specified.</b></span></td>\n</tr>\n<tr>\n<td><code>direction</code></td>\n<td><a href=\"../data_types/vector.md\">Vector</a></td>\n<td><em>optional</em></td>\n<td>If specified, determines the direction of the raycast. Otherwise, defaults to the direction at the entity is facing (as if <code>space</code> is <code>&quot;local&quot;</code>.)</td>\n</tr>\n<tr>\n<td><code>match_bientity_condition</code></td>\n<td><a href=\"../bientity_condition_types.md\">Bi-entity Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the entity condition type will check if this bi-entity condition type is fulfilled by either or both the &#39;actor&#39; (the entity being checked by the entity condition type) and &#39;target&#39; (entity that the ray-cast has gone through). If not, the entity will be ignored.</td>\n</tr>\n<tr>\n<td><code>hit_bientity_condition</code></td>\n<td><a href=\"../bientity_condition_types.md\">Bi-entity Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the entity condition type will check if this bi-entity condition type is fulfilled by either or both the &#39;actor&#39; (the entity being checked by the entity condition type) and &#39;target&#39; (the entity that has hit by the ray-cast).</td>\n</tr>\n<tr>\n<td><code>entity_distance</code></td>\n<td><a href=\"../data_types/float.md\">Float</a></td>\n<td><em>optional</em></td>\n<td>Determines the distance of the raycast for entities if <code>entity</code> is set to <code>true</code>. If absent, it will use the higher value between the entity&#39;s attack range (with Reach Entity Attributes compatibility) or the <code>distance</code> field.</td>\n</tr>\n<tr>\n<td><code>block_condition</code></td>\n<td><a href=\"../block_condition_types.md\">Block Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the entity condition type will check if the block that was hit by the ray-cast fulfills this block condition type.</td>\n</tr>\n<tr>\n<td><code>block_distance</code></td>\n<td><a href=\"../data_types/float.md\">Float</a></td>\n<td><em>optional</em></td>\n<td>Determines the distance of the raycast for blocks if <code>block</code> is set to <code>true</code>. If absent, it will use the higher value between the entity&#39;s block reach (with Reach Entity Attributes compatibility) or the <code>distance</code> field.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">&quot;condition&quot;: {\n    &quot;type&quot;: &quot;origins:raycast&quot;,\n    &quot;distance&quot;: 6,\n    &quot;block&quot;: true,\n    &quot;entity&quot;: true,\n    &quot;shape_type&quot;: &quot;visual&quot;,\n    &quot;fluid_handling&quot;: &quot;any&quot;,\n    &quot;match_bientity_condition&quot;: {\n        &quot;type&quot;: &quot;origins:target_condition&quot;,\n        &quot;condition&quot;: {\n            &quot;type&quot;: &quot;origins:entity_type&quot;,\n            &quot;entity_type&quot;: &quot;minecraft:wolf&quot;\n        }\n    },\n    &quot;hit_bientity_condition&quot;: {\n        &quot;type&quot;: &quot;origins:owner&quot;\n    }\n}\n</code></pre>\n<p>This example will check if a wolf mob is tamed by the entity that has fired the ray-cast. The ray-cast will ignore tamable mobs other than wolves.</p>\n"}