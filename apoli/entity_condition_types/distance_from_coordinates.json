{"type":"object","required":["comparison","compare_to"],"properties":{"reference":{"type":"string","default":"\"world_origin\"","description":"The point to compare the distance to. Accepts `\"world_origin\"` or `\"world_spawn\"`.","markdownDescription":"The point to compare the distance to. Accepts `\"world_origin\"` or `\"world_spawn\"`."},"offset":{"$ref":"../types/vector.json","description":"If specified, determines how much the reference point should be offset.","markdownDescription":"If specified, determines how much the reference point should be offset."},"ignore_x":{"type":"boolean","default":false,"description":"Determines whether to consider the X axis to be 0.","markdownDescription":"Determines whether to consider the X axis to be 0."},"ignore_y":{"type":"boolean","default":false,"description":"Determines whether to consider the Y axis to be 0.","markdownDescription":"Determines whether to consider the Y axis to be 0."},"ignore_z":{"type":"boolean","default":false,"description":"Determines whether to consider the Z axis to be 0.","markdownDescription":"Determines whether to consider the Z axis to be 0."},"shape":{"$ref":"../types/shape.json","description":"Determines the shape of the check. Accepts `\"cube\"`, `\"star\"` or `\"sphere\"`.","markdownDescription":"Determines the shape of the check. Accepts `\"cube\"`, `\"star\"` or `\"sphere\"`."},"scale_reference_to_dimension":{"type":"boolean","default":true,"description":"Determines whether to check for the reference point whilst considering the coordinate scale of the dimension.","markdownDescription":"Determines whether to check for the reference point whilst considering the coordinate scale of the dimension."},"result_on_the_wrong_dimension":{"type":"boolean","description":"If specified, this value will override the result of the comparison if the entity being tested is not in the reference's dimension.","markdownDescription":"If specified, this value will override the result of the comparison if the entity being tested is not in the reference's dimension."},"round_to_digit":{"type":"integer","description":"If specified, rounds the result to the closest number with the specified amount of digits after the comma. Negative numbers also work (e.g: `-2` rounds to multiples of 100).","markdownDescription":"If specified, rounds the result to the closest number with the specified amount of digits after the comma. Negative numbers also work (e.g: `-2` rounds to multiples of 100)."},"comparison":{"$ref":"../types/comparison.json","description":"Determines how the calculated distance should be compared to the specified value.","markdownDescription":"Determines how the calculated distance should be compared to the specified value."},"compare_to":{"type":"number","description":"The value at which the calculated distance is compared to.","markdownDescription":"The value at which the calculated distance is compared to."},"type":{"description":"## Distance From Coordinates\n\n---\n\n\n[Entity Condition Type](https://origins.readthedocs.io/en/latest/types/entity_condition_types/distance_from_coordinates)\n\nCompares the distance of the entity's current position to the specified coordinates.\n\nType ID: `origins:distance_from_coordinates`\n\n---\n\n### Examples\n\n```json\n\"condition\": {\n    \"type\": \"origins:distance_from_coordinates\",\n    \"offset\": {\n        \"x\": 256,\n        \"y\": 64,\n        \"z\": 32\n    },\n    \"shape\": \"sphere\",\n    \"comparison\": \"<\",\n    \"compare_to\": 8\n}\n```\n\nThis example will check if the entity is within an 8 blocks radius relative to the specified coordinates (X: 256, Y: 64, Z: 32).\n<br>\n\n```json\n\"condition\": {\n    \"type\": \"origins:distance_from_coordinates\",\n    \"reference\": \"world_spawn\",\n    \"shape\": \"cube\",\n    \"ignore_y\": true,\n    \"comparison\": \"<\",\n    \"compare_to\": 4\n}\n```\n\nThis example will check if the player is within a 4 blocks radius relative to the world spawn.\n","markdownDescription":"## Distance From Coordinates\n\n---\n\n\n[Entity Condition Type](https://origins.readthedocs.io/en/latest/types/entity_condition_types/distance_from_coordinates)\n\nCompares the distance of the entity's current position to the specified coordinates.\n\nType ID: `origins:distance_from_coordinates`\n\n---\n\n### Examples\n\n```json\n\"condition\": {\n    \"type\": \"origins:distance_from_coordinates\",\n    \"offset\": {\n        \"x\": 256,\n        \"y\": 64,\n        \"z\": 32\n    },\n    \"shape\": \"sphere\",\n    \"comparison\": \"<\",\n    \"compare_to\": 8\n}\n```\n\nThis example will check if the entity is within an 8 blocks radius relative to the specified coordinates (X: 256, Y: 64, Z: 32).\n<br>\n\n```json\n\"condition\": {\n    \"type\": \"origins:distance_from_coordinates\",\n    \"reference\": \"world_spawn\",\n    \"shape\": \"cube\",\n    \"ignore_y\": true,\n    \"comparison\": \"<\",\n    \"compare_to\": 4\n}\n```\n\nThis example will check if the player is within a 4 blocks radius relative to the world spawn.\n"}},"x-intellij-html-description":"<hr>\n<h2>title: Distance From Coordinates (Entity Condition Type)\ndate: 2021-12-10</h2>\n<h1>Distance From Coordinates</h1>\n<p><a href=\"../entity_condition_types.md\">Entity Condition Type</a></p>\n<p>Compares the distance of the entity&#39;s current position to the specified coordinates.</p>\n<p>Type ID: <code>origins:distance_from_coordinates</code></p>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>reference</code></td>\n<td><a href=\"../data_types/string.md\">String</a></td>\n<td><code>&quot;world_origin&quot;</code></td>\n<td>The point to compare the distance to. Accepts <code>&quot;world_origin&quot;</code> or <code>&quot;world_spawn&quot;</code>.</td>\n</tr>\n<tr>\n<td><code>offset</code></td>\n<td><a href=\"../data_types/vector.md\">Vector</a></td>\n<td><em>optional</em></td>\n<td>If specified, determines how much the reference point should be offset.</td>\n</tr>\n<tr>\n<td><code>ignore_x</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>Determines whether to consider the X axis to be 0.</td>\n</tr>\n<tr>\n<td><code>ignore_y</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>Determines whether to consider the Y axis to be 0.</td>\n</tr>\n<tr>\n<td><code>ignore_z</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>Determines whether to consider the Z axis to be 0.</td>\n</tr>\n<tr>\n<td><code>shape</code></td>\n<td><a href=\"../data_types/string.md\">String</a></td>\n<td><code>&quot;cube&quot;</code></td>\n<td>Determines the shape of the check. Accepts <code>&quot;cube&quot;</code>, <code>&quot;star&quot;</code> or <code>&quot;sphere&quot;</code>.</td>\n</tr>\n<tr>\n<td><code>scale_reference_to_dimension</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>true</code></td>\n<td>Determines whether to check for the reference point whilst considering the coordinate scale of the dimension.</td>\n</tr>\n<tr>\n<td><code>result_on_the_wrong_dimension</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><em>optional</em></td>\n<td>If specified, this value will override the result of the comparison if the entity being tested is not in the reference&#39;s dimension.</td>\n</tr>\n<tr>\n<td><code>round_to_digit</code></td>\n<td><a href=\"../data_types/integer.md\">Integer</a></td>\n<td><em>optional</em></td>\n<td>If specified, rounds the result to the closest number with the specified amount of digits after the comma. Negative numbers also work (e.g: <code>-2</code> rounds to multiples of 100).</td>\n</tr>\n<tr>\n<td><code>comparison</code></td>\n<td><a href=\"../data_types/comparison.md\">Comparison</a></td>\n<td></td>\n<td>Determines how the calculated distance should be compared to the specified value.</td>\n</tr>\n<tr>\n<td><code>compare_to</code></td>\n<td><a href=\"../data_types/float.md\">Float</a></td>\n<td></td>\n<td>The value at which the calculated distance is compared to.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">&quot;condition&quot;: {\n    &quot;type&quot;: &quot;origins:distance_from_coordinates&quot;,\n    &quot;offset&quot;: {\n        &quot;x&quot;: 256,\n        &quot;y&quot;: 64,\n        &quot;z&quot;: 32\n    },\n    &quot;shape&quot;: &quot;sphere&quot;,\n    &quot;comparison&quot;: &quot;&lt;&quot;,\n    &quot;compare_to&quot;: 8\n}\n</code></pre>\n<p>This example will check if the entity is within an 8 blocks radius relative to the specified coordinates (X: 256, Y: 64, Z: 32).\n<br></p>\n<pre><code class=\"language-json\">&quot;condition&quot;: {\n    &quot;type&quot;: &quot;origins:distance_from_coordinates&quot;,\n    &quot;reference&quot;: &quot;world_spawn&quot;,\n    &quot;shape&quot;: &quot;cube&quot;,\n    &quot;ignore_y&quot;: true,\n    &quot;comparison&quot;: &quot;&lt;&quot;,\n    &quot;compare_to&quot;: 4\n}\n</code></pre>\n<p>This example will check if the player is within a 4 blocks radius relative to the world spawn.</p>\n"}