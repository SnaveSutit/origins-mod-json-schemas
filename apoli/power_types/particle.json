{"type":"object","required":["particle","frequency"],"properties":{"particle":{"$ref":"../types/particle_effect.json","description":"The particle type that will be spawned.","markdownDescription":"The particle type that will be spawned."},"bientity_condition":{"$ref":"../bientity_condition.json","description":"If specified, the particle will only be visible if this bi-entity condition is fulfilled by either or both the entity that has the power and the entity looking at the entity that has the power.","markdownDescription":"If specified, the particle will only be visible if this bi-entity condition is fulfilled by either or both the entity that has the power and the entity looking at the entity that has the power."},"count":{"type":"integer","default":1,"description":"Determines the amount of particles to spawn.","markdownDescription":"Determines the amount of particles to spawn."},"speed":{"type":"number","default":0,"description":"Determines the speed of the specified particle type.","markdownDescription":"Determines the speed of the specified particle type."},"force":{"type":"boolean","default":false,"description":"Determines whether to display the emitted particles within 512 blocks (`true`) or 32 blocks (`false`).","markdownDescription":"Determines whether to display the emitted particles within 512 blocks (`true`) or 32 blocks (`false`)."},"spread":{"$ref":"../types/vector.json","description":"Determines the size of the three-dimensional cuboid volume to spawn the specified particle type in.","markdownDescription":"Determines the size of the three-dimensional cuboid volume to spawn the specified particle type in."},"offset_x":{"type":"number","default":0,"description":"The offset of where the particle will be centered in the X axis.","markdownDescription":"The offset of where the particle will be centered in the X axis."},"offset_y":{"type":"number","default":0.5,"description":"The offset of where the particle will be centered in the Y axis.","markdownDescription":"The offset of where the particle will be centered in the Y axis."},"offset_z":{"type":"number","default":0,"description":"The offset of where the particle will be centered in the Z axis.","markdownDescription":"The offset of where the particle will be centered in the Z axis."},"frequency":{"type":"integer","description":"Determines how often the particles should spawn (interval in ticks).","markdownDescription":"Determines how often the particles should spawn (interval in ticks)."},"visible_in_first_person":{"type":"boolean","default":false,"description":"Determines whether the particle type should be visible in first person.","markdownDescription":"Determines whether the particle type should be visible in first person."},"visible_while_invisible":{"type":"boolean","default":false,"description":"Determines whether the particle type should be visible if the entity is invisible.","markdownDescription":"Determines whether the particle type should be visible if the entity is invisible."},"type":{"description":"## Particle\n\n---\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/particle)\n\nSpawns particles on the body of the entity that has the power for visual effects.\n\nType ID: `origins:particle`\n\n\n!!!\tcaution\n\n\tThe condition specified in the `bientity_condition` field is only evaluated on the <span style=\"color: goldenrod\"><b>client-side</b></span>, therefore, using any condition types that only work on the server-side will not work.\n\n---\n\n### Examples\n\n```json\n{\n  \t\"type\": \"origins:particle\",\n  \t\"particle\": \"minecraft:portal\",\n  \t\"frequency\": 4\n}\n```\n\nThis example will continuously spawn portal particles on the entity that has the power.\n","markdownDescription":"## Particle\n\n---\n\n\n[Power Type](https://origins.readthedocs.io/en/latest/types/power_types/particle)\n\nSpawns particles on the body of the entity that has the power for visual effects.\n\nType ID: `origins:particle`\n\n\n!!!\tcaution\n\n\tThe condition specified in the `bientity_condition` field is only evaluated on the <span style=\"color: goldenrod\"><b>client-side</b></span>, therefore, using any condition types that only work on the server-side will not work.\n\n---\n\n### Examples\n\n```json\n{\n  \t\"type\": \"origins:particle\",\n  \t\"particle\": \"minecraft:portal\",\n  \t\"frequency\": 4\n}\n```\n\nThis example will continuously spawn portal particles on the entity that has the power.\n"}},"x-intellij-html-description":"<hr>\n<h2>title: Particle (Power Type)\ndate: 2021-04-08</h2>\n<h1>Particle</h1>\n<p><a href=\"../power_types.md\">Power Type</a></p>\n<p>Spawns particles on the body of the entity that has the power for visual effects.</p>\n<p>Type ID: <code>origins:particle</code></p>\n<p>!!!\tcaution</p>\n<pre><code>The condition specified in the `bientity_condition` field is only evaluated on the &lt;span style=&quot;color: goldenrod&quot;&gt;&lt;b&gt;client-side&lt;/b&gt;&lt;/span&gt;, therefore, using any condition types that only work on the server-side will not work.\n</code></pre>\n<h3>Fields</h3>\n<table>\n<thead>\n<tr>\n<th>Field</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><code>particle</code></td>\n<td><a href=\"../data_types/particle_effect.md\">Particle Effect</a></td>\n<td></td>\n<td>The particle type that will be spawned.</td>\n</tr>\n<tr>\n<td><code>bientity_condition</code></td>\n<td><a href=\"../bientity_condition_types.md\">Bi-entity Condition Type</a></td>\n<td><em>optional</em></td>\n<td>If specified, the particle will only be visible if this bi-entity condition is fulfilled by either or both the entity that has the power and the entity looking at the entity that has the power.</td>\n</tr>\n<tr>\n<td><code>count</code></td>\n<td><a href=\"../data_types/integer.md\">Integer</a></td>\n<td><code>1</code></td>\n<td>Determines the amount of particles to spawn.</td>\n</tr>\n<tr>\n<td><code>speed</code></td>\n<td><a href=\"../data_types/float.md\">Float</a></td>\n<td><code>0.0</code></td>\n<td>Determines the speed of the specified particle type.</td>\n</tr>\n<tr>\n<td><code>force</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>Determines whether to display the emitted particles within 512 blocks (<code>true</code>) or 32 blocks (<code>false</code>).</td>\n</tr>\n<tr>\n<td><code>spread</code></td>\n<td><a href=\"../data_types/vector.md\">Vector</a></td>\n<td><code>{&quot;x&quot;: 0.5, &quot;y&quot;: 0.5, &quot;z&quot;: 0.5}</code></td>\n<td>Determines the size of the three-dimensional cuboid volume to spawn the specified particle type in.</td>\n</tr>\n<tr>\n<td><code>offset_x</code></td>\n<td><a href=\"../data_types/float.md\">Float</a></td>\n<td><code>0.0</code></td>\n<td>The offset of where the particle will be centered in the X axis.</td>\n</tr>\n<tr>\n<td><code>offset_y</code></td>\n<td><a href=\"../data_types/float.md\">Float</a></td>\n<td><code>0.5</code></td>\n<td>The offset of where the particle will be centered in the Y axis.</td>\n</tr>\n<tr>\n<td><code>offset_z</code></td>\n<td><a href=\"../data_types/float.md\">Float</a></td>\n<td><code>0.0</code></td>\n<td>The offset of where the particle will be centered in the Z axis.</td>\n</tr>\n<tr>\n<td><code>frequency</code></td>\n<td><a href=\"../data_types/integer.md\">Integer</a></td>\n<td></td>\n<td>Determines how often the particles should spawn (interval in ticks).</td>\n</tr>\n<tr>\n<td><code>visible_in_first_person</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>Determines whether the particle type should be visible in first person.</td>\n</tr>\n<tr>\n<td><code>visible_while_invisible</code></td>\n<td><a href=\"../data_types/boolean.md\">Boolean</a></td>\n<td><code>false</code></td>\n<td>Determines whether the particle type should be visible if the entity is invisible.</td>\n</tr>\n</tbody></table>\n<h3>Examples</h3>\n<pre><code class=\"language-json\">{\n  \t&quot;type&quot;: &quot;origins:particle&quot;,\n  \t&quot;particle&quot;: &quot;minecraft:portal&quot;,\n  \t&quot;frequency&quot;: 4\n}\n</code></pre>\n<p>This example will continuously spawn portal particles on the entity that has the power.</p>\n"}